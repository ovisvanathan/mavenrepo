<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="ca.uhn.hapi"
		module="hapi"
		revision="2.1"
		status="release"
		publication="20130402025051"
	>
		<license name="HAPI is dual licensed (MPL, GPL)" />
		<license name="Mozilla Public License 1.1" url="http://www.mozilla.org/MPL/MPL-1.1.txt" />
		<license name="GNU General Public License" url="http://www.gnu.org/licenses/gpl.txt" />
		<description homepage="http://hl7api.sourceforge.net/">
		HAPI (HL7 application programming interface; pronounced &quot;happy&quot;) is an open-source, 
		object-oriented HL7 2.x parser for Java.  HL7 (http://hl7org)  is a messaging 
		specification for healthcare information systems.  This project is not affiliated with 
		the HL7 organization; we are just writing some software that conforms to their 
		specification.  The project was initiated by University Health Network 
		(a large multi-site teaching hospital in Toronto, Canada).
		</description>
		<m:properties__project_parent_basedir>${project.parent.basedir}</m:properties__project_parent_basedir>
		<m:properties__maven.source.plugin.version>2.2</m:properties__maven.source.plugin.version>
		<m:properties__hapi.version.stable>2.1</m:properties__hapi.version.stable>
		<m:properties__log4j_version>${log4j.version}</m:properties__log4j_version>
		<m:properties__netbeans.compile.on.save>all</m:properties__netbeans.compile.on.save>
		<m:properties__maven.plugin.plugin.version>3.2</m:properties__maven.plugin.plugin.version>
		<m:properties__maven.license.plugin.version>1.3</m:properties__maven.license.plugin.version>
		<m:properties__plugin.javadoc.maxmemory>1600m</m:properties__plugin.javadoc.maxmemory>
		<m:properties__hapi.version.testpanel>2.1</m:properties__hapi.version.testpanel>
		<m:properties__jetty.version>6.1.26</m:properties__jetty.version>
		<m:properties__maven.javadoc.plugin.version>2.9</m:properties__maven.javadoc.plugin.version>
		<m:properties__slf4j_version>${slf4j.version}</m:properties__slf4j_version>
		<m:properties__maven.cobertura.plugin.version>2.5.2</m:properties__maven.cobertura.plugin.version>
		<m:properties__maven.resources.plugin.version>2.6</m:properties__maven.resources.plugin.version>
		<m:properties__root.basedir>${basedir}</m:properties__root.basedir>
		<m:properties__maven.jxr.plugin.version>
			2.3
		</m:properties__maven.jxr.plugin.version>
		<m:properties__slf4j.version>1.6.6</m:properties__slf4j.version>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__log4j.version>1.2.17</m:properties__log4j.version>
		<m:properties__junit.version>4.11</m:properties__junit.version>
		<m:properties__maven.site.plugin.version>3.1</m:properties__maven.site.plugin.version>
		<m:properties__maven.gpg.plugin.version>1.4</m:properties__maven.gpg.plugin.version>
		<m:properties__maven.changes.plugin.version>2.8</m:properties__maven.changes.plugin.version>
		<m:properties__maven.deploy.plugin.version>2.7</m:properties__maven.deploy.plugin.version>
		<m:properties__maven.findbugs.plugin.version>2.5.2</m:properties__maven.findbugs.plugin.version>
		<m:properties__maven.surefire.report.plugin.version>2.12.4</m:properties__maven.surefire.report.plugin.version>
		<m:properties__bouncycastle.version>1.46</m:properties__bouncycastle.version>
		<m:properties__commons-cli.version>1.2</m:properties__commons-cli.version>
		<m:properties__spring.version>3.1.2.RELEASE</m:properties__spring.version>
		<m:properties__hapi.version>2.1</m:properties__hapi.version>
		<m:properties__maven.assembly.plugin.version>2.3</m:properties__maven.assembly.plugin.version>
		<m:properties__maven.project.info.plugin.version>2.6</m:properties__maven.project.info.plugin.version>
		<m:properties__hapi_version_stable>${hapi.version.stable}</m:properties__hapi_version_stable>
		<m:properties__hapi.version.structures>2.1</m:properties__hapi.version.structures>
		<m:properties__geronimo.jms.spec.version>1.1.1</m:properties__geronimo.jms.spec.version>
		<m:properties__maven.surefire.plugin.version>2.12.4</m:properties__maven.surefire.plugin.version>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|null__maven-site-plugin__3.1|null__maven-compiler-plugin__3.0|org.codehaus.mojo__license-maven-plugin__1.3</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="public" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
</ivy-module>
