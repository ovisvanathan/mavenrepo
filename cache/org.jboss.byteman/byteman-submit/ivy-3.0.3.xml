<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.jboss.byteman"
		module="byteman-submit"
		revision="3.0.3"
		status="release"
		publication="20151124165834"
	>
		<license name="LGPL 2.1" url="http://www.gnu.org/licenses/lgpl-2.1.html" />
		<description homepage="">
		The Byteman install jar contains classes whcih canbe used to install an agent into the
        current JVM or into a remote JVM
		</description>
		<m:properties__autoVersionSubmodules>true</m:properties__autoVersionSubmodules>
		<m:properties__pushChanges>false</m:properties__pushChanges>
		<m:properties__tools.jar>/file-not-found/tools.jar</m:properties__tools.jar>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__useReleaseProfile>false</m:properties__useReleaseProfile>
		<m:properties__project.reporting.outputEncoding>UTF-8</m:properties__project.reporting.outputEncoding>
		<m:dependency.management__org.jboss.byteman__byteman__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman__version>
		<m:dependency.management__org.jboss.byteman__byteman-submit__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-submit__version>
		<m:dependency.management__org.jboss.byteman__byteman-install__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-install__version>
		<m:dependency.management__org.jboss.byteman__byteman-sample__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-sample__version>
		<m:dependency.management__org.jboss.byteman__byteman-bmunit__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-bmunit__version>
		<m:dependency.management__org.jboss.byteman__byteman-dtest__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-dtest__version>
		<m:dependency.management__org.jboss.byteman__byteman-jboss-modules-plugin__version>3.0.3</m:dependency.management__org.jboss.byteman__byteman-jboss-modules-plugin__version>
		<m:dependency.management__org.ow2.asm__asm-all__version>5.0.3</m:dependency.management__org.ow2.asm__asm-all__version>
		<m:dependency.management__org.ow2.asm__asm-debug-all__version>5.0.3</m:dependency.management__org.ow2.asm__asm-debug-all__version>
		<m:dependency.management__net.sf.squirrel-sql.thirdparty-non-maven__java-cup__version>0.11a</m:dependency.management__net.sf.squirrel-sql.thirdparty-non-maven__java-cup__version>
		<m:dependency.management__de.jflex__jflex__version>1.4.3</m:dependency.management__de.jflex__jflex__version>
		<m:dependency.management__junit__junit__version>4.8.2</m:dependency.management__junit__junit__version>
		<m:dependency.management__org.testng__testng__version>6.8.5</m:dependency.management__org.testng__testng__version>
		<m:maven.plugins>org.apache.maven.plugins__maven-compiler-plugin__null|org.apache.maven.plugins__maven-source-plugin__null|org.apache.maven.plugins__maven-javadoc-plugin__null|org.apache.maven.plugins__maven-compiler-plugin__null|org.apache.maven.plugins__maven-source-plugin__null|org.apache.maven.plugins__maven-javadoc-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="public" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="byteman-submit" type="jar" ext="jar" conf="master"/>
		<artifact name="byteman-submit" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="byteman-submit" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
</ivy-module>
